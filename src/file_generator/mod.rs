//! This module contains functionality for interacting with the Lampe output.

use crate::file_generator::error::{Error, Result};
use nargo::package::Package;
use std::collections::HashMap;
use std::fs;
use std::path::Path;

pub mod error;
mod lake;
mod lean;
mod lean_toolchain;

const LAMPE_DIR_NAME: &str = "lampe";
const EXTRACTED_LIB_NAME: &str = "Extracted";
const LAMPE_GENERATED_COMMENT: &str = "Generated by lampe";

type LeanFileName = String;
type LeanFileContent = String;

pub fn lampe_project(
    noir_root_dir: &Path,
    package: &Package,
    extracted_files: &HashMap<LeanFileName, LeanFileContent>,
) -> Result<()> {
    let lampe_root_dir = noir_root_dir.join(LAMPE_DIR_NAME);

    if !lampe_root_dir.exists() {
        fs::create_dir(&lampe_root_dir)?;
    }

    generate_package_structure(&lampe_root_dir, package)?;

    lean::generate_lean_files(&lampe_root_dir, package, extracted_files)?;

    Ok(())
}

fn generate_package_structure(lampe_root_dir: &Path, package: &Package) -> Result<()> {
    lake::generate_lakefile_toml(lampe_root_dir, package, false)?;
    lean_toolchain::generate_lean_toolchain(lampe_root_dir, false)?;

    Ok(())
}
